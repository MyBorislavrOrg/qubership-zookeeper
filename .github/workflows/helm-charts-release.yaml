---

name: Helm Charts Release
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true
        type: string
permissions:
  contents: write
  packages: write
run-name: ${{ github.repository }} Release ${{ github.event.inputs.release }}
concurrency:
  group: 'helm-charts-release'
  cancel-in-progress: false
jobs:
  check-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag exists
        id: check_tag
        uses: netcracker/qubership-workflow-hub/actions/tag-action@main
        with:
          tag-name: 'v${{ inputs.release }}'
          ref: ${{ github.ref }}
          create-tag: false
          check-tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  load-docker-build-components:
    needs: [check-tag]
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Load Docker Configuration
      id: load_component
      run:  |
        verify=$(cat "$GITHUB_WORKSPACE/.github/docker-build-config.json" | jq '
        def verify_structure:
        .components as $components
        | .platforms as $platforms
        | ($components | type == "array")
        and (all($components[]; has("name") and has("file") and has("context")))
        and ($platforms | type == "string");
        verify_structure
        | if . then true else false end
        ')
        if [ ${verify} == 'true' ]; then
          echo "✅ $GITHUB_WORKSPACE/.github/docker-build-config.json file is valid"
          components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-build-config.json")
          platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-build-config.json")
        else
          echo "❗ $GITHUB_WORKSPACE/.github/docker-build-config.json file is invalid"
          echo "❗ $GITHUB_WORKSPACE/.github/docker-build-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        echo "components=${components}" >> $GITHUB_OUTPUT
        echo "platforms=${platforms}" >> $GITHUB_OUTPUT

  docker-check-build:
    needs: [load-docker-build-components]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component: ${{ fromJson(needs.load-docker-build-components.outputs.component) }}
    steps:
      - name: Debug
        run: |
          echo "Component name: ${{ matrix.component.name }}"
          echo "Component file: ${{ matrix.component.file }}"
          echo "Component context: ${{ matrix.component.context }}"
          echo "Platforms: ${{ needs.load-docker-build-components.outputs.platforms }}"
      - name: Docker check build
        id: docker-check-build
        uses: netcracker/qubership-workflow-hub/actions/docker-action@main
        with:
          ref: ${{ github.ref }}
          download-artifact: false
          dry-run: true
          component: ${{ matrix.component }}
          platforms: ${{ needs.load-docker-build-components.outputs.platforms }}
          tags: "test-${{ inputs.release }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # chart-release:
  #   needs: [docker-check-build,check-tag,load-docker-build-components]
  #   runs-on: ubuntu-latest
  #   outputs:
  #     images-versions: ${{ steps.update-versions.outputs.images-versions }}
  #   steps:
  #     - name: Input parameters
  #       run: |
  #         echo "Release version: ${{ inputs.release }}" >> $GITHUB_STEP_SUMMARY

  #     - name: "Update versions in values"
  #       id: update-versions
  #       uses: netcracker/qubership-workflow-hub/actions/helm-charts-release@main
  #       with:
  #         release: ${{ inputs.release }}
  #         config-file: .github/helm-charts-release-config.yaml
  # tag:
  #   needs: [chart-release]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Create release tag
  #       uses: netcracker/qubership-workflow-hub/actions/tag-action@main
  #       with:
  #         tag-name: "v${{ inputs.release }}"
  #         ref: "release-${{ inputs.release }}"
  #         create-tag: true
  #         check-tag: false

  # docker-build:
  #   needs: [tag,load-docker-build-components,chart-release]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       component: ${{ fromJson(needs.load-docker-build-components.outputs.component) }}
  #   steps:
  #     - name: Get version for current component
  #       id: get-version
  #       run: |
  #         echo "version=${{ fromJson(needs.chart-release.outputs.images-versions)[martix.component.name] }}" >> $GITHUB_ENV
  #         echo "image=${{ matrix.component.name }}" >> $GITHUB_ENV
  #     - name: Docker build
  #       uses: netcracker/qubership-workflow-hub/actions/docker-action@main
  #       with:
  #         ref: v${{ inputs.release }}
  #         download-artifact: false
  #         dry-run: false
  #         component: ${{ toJson(matrix.component) }}
  #         platforms: ${{ needs.load-docker-build-components.outputs.platforms }}
  #         tags: "${{ needs.chart-release.outputs.image-version }},latest"
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}

  # github-release:
  #   needs: [chart-release,docker-build]
  #   uses: netcracker/qubership-workflow-hub/.github/workflows/release-drafter.yml@main
  #   with:
  #     version: ${{ inputs.release }}
  #     publish: true

  # upload-assets:
  #   needs: [github-release]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     with:
  #       ref: v${{ inputs.release }}

  #   - name: Archive and Upload Assets
  #     uses: netcracker/qubership-workflow-hub/actions/archive-and-upload-assets@main
  #     with:
  #       config-path: './.github/assets-config.yml'
  #       dist-path: './dist'
  #       upload: true
  #       ref: v${{ inputs.release }}
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
